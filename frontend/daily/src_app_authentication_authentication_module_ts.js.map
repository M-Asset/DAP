{"version":3,"file":"src_app_authentication_authentication_module_ts.js","mappings":"wNAaO,IAAMA,EAAb,MAAM,QACJC,YAAoBC,iBACpBC,YACEC,EACAC,GAMA,OAAIC,aAAaC,QAAQ,WACvBC,KAAKN,OAAOO,cAAc,eACnB,iDAZAT,GAAWU,wCAAXV,EAAWW,QAAXX,EAAW,qBAFV,SAEDA,GAAb,+CCAO,IAAMY,EAAb,MAAM,QAcJX,YACUY,EACAX,EACAY,GAFAN,6BACAA,cACAA,2BAhBVA,eAAY,IAAIO,KAAU,CACxBC,SAAU,IAAIC,KAAY,GAAI,CAC5BC,cACAA,eAAqB,KAEvBC,SAAU,IAAIF,KAAY,GAAI,CAC5BC,cACAA,eAAqB,OAIzBV,cAAmB,uBAQnBY,YACAC,WAEEb,KAAKc,kBAAoBd,KAAKK,sBAC3BU,MAFcf,KAAKgB,UAAUC,OAG7BC,UAAWC,IAEV,GADAC,QAAQC,IAAI,WAAYF,GACG,GAAvBA,EAASG,WAAiB,CAC5B,IAAIC,EAAaJ,EAASK,QAAQC,KAAKC,aAAaH,WAEhDI,EAAWR,EAASK,QAAQC,KAAKjB,SACrCV,aAAa8B,QAAQ,SAAUC,KAAKC,UAFvBX,EAASK,QAAQC,KAAKM,SAGnCjC,aAAa8B,QAAQ,WAAYC,KAAKC,UAAUH,IAChD7B,aAAa8B,QAAQ,aAAcC,KAAKC,UAAUP,IAClDvB,KAAKK,sBACF2B,WACCb,EAASK,QAAQC,KAAKjB,SACtB,UAAYW,EAASK,QAAQS,OAE9Bf,UAAWC,IACVC,QAAQC,IAAI,iBAAkBF,EAASG,YACvCF,QAAQC,IAAI,aAAcrB,KAAKkC,UACR,GAAvBf,EAASG,YACLtB,KAAKN,OAAOO,cAAcD,KAAKkC,iBAGP,KAAvBf,EAASG,YAClBtB,KAAKmC,WAIbA,SACEnC,KAAKM,oBAAoB8B,QAAQ,CAE/BC,QAAS,yDACTC,KAAM,6BACNC,OAAQ,KAENvC,KAAKK,sBACF8B,OAAOnC,KAAKgB,UAAUC,MAAMT,UAC5BU,aAELsB,OAAQ,SAKZC,oBACwB,QAAtBC,OAAK5B,yBAAiB6B,SAAEC,4DApEfxC,GAAkBF,6DAAlBE,EAAkByC,+2BCb/B3C,kBAA8BA,mCAAY4C,eACxC5C,iBAA2C,UACnCA,kCAAsBA,QAC5BA,iBACFA,QAEAA,iBAAwB,aACAA,oBAAQA,QAC9BA,iBACEA,eAA0C,cAS5CA,UAGFA,kBAAwB,cACAA,qBAAQA,QAC9BA,kBACEA,gBAA0C,kBAW1CA,iBAQEA,2DAEC6C,OADkC,YADnCC,OAGP,OAA4C,aAEtC9C,YAGLA,sBASEA,oBACFA,UAKFA,yDAlEMA,+BAoCEA,+HAgBJA,6GAIC,i0QD3CQE,GAAb,GELa6C,EAAb,MAAM,QAEJxD,eAGAmB,0DALWqC,8BAAcJ,sjBCR3B3C,iBAAgC,WAI5BA,iBAIAA,iBAAsC,QAAtCA,CAAsC,UACxBA,kDAAqCA,UACjDA,iBAAuB,UAAOA,iCAAoBA,cAGtDA,kBAGEA,6BAA+C,YAOjDA,22FDfW+C,GAAb,GEHA,MAAMC,EAAiB,CACrB,CAAEC,KAAM,GAAIC,WAAY,QAASC,UAAW,OAAO1D,YAAa,CAACH,IACjE,CAAE2D,KAAM,QAASG,UCAnB,MAAM,QAEJ7D,eAEAmB,0DAJW2C,8BAAoBV,mGCPjC3C,iBACEA,qBACFA,sNDKaqD,GAAb,GDAoD5D,YAAa,CAACH,KAO3D,IAAMgE,EAAb,MAAM,sDAAOA,4DAHF,CAACC,cAAsBP,IACtBO,QAECD,GAAb,iBGDO,IAAME,EAAb,MAAM,sDAAOA,4DAFF,CAACC,KAAcH,EAA6BI,QAE1CF,GAAb","names":["LoggedGuard","constructor","router","canActivate","route","state","localStorage","getItem","this","navigateByUrl","i0","factory","LoginFormComponent","authenticationService","confirmationService","FormGroup","username","FormControl","Validators","password","ngOnInit","onSubmit","loginSubscription","login","loginForm","value","subscribe","response","console","log","statusCode","privileges","payload","user","profileModel","userName","setItem","JSON","stringify","userId","storeToken","token","urlRoute","logout","confirm","message","icon","accept","reject","ngOnDestroy","c","_a","unsubscribe","selectors","ctx","_r0","b","LoginComponent","routes","path","redirectTo","pathMatch","component","LoginLayoutComponent","AuthenticationRoutingModule","RouterModule","AuthenticationModule","CommonModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/authentication/guards/logged.guard.ts","./src/app/authentication/components/login-form/login-form.component.ts","./src/app/authentication/components/login-form/login-form.component.html","./src/app/authentication/components/login/login.component.ts","./src/app/authentication/components/login/login.component.html","./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/layout/login-layout/login-layout.component.ts","./src/app/authentication/layout/login-layout/login-layout.component.html","./src/app/authentication/authentication.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoggedGuard implements CanActivate {\r\n  constructor(private router: Router){}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    if (localStorage.getItem('token')) {\r\n      this.router.navigateByUrl('daily/home')\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Defines } from 'src/app/shared/statics/defines';\r\nimport { AuthenticationService } from '../../services/authentication.service';\r\nimport { User } from '../../models/user.model';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { ConfirmationService } from 'primeng/api';\r\n@Component({\r\n  selector: 'app-login-form',\r\n  templateUrl: './login-form.component.html',\r\n  styleUrls: ['./login-form.component.scss'],\r\n})\r\nexport class LoginFormComponent implements OnInit, OnDestroy {\r\n  loginForm = new FormGroup({\r\n    username: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(5),\r\n    ]),\r\n    password: new FormControl('', [\r\n      Validators.required,\r\n      Validators.minLength(5),\r\n    ]),\r\n  });\r\n  showPassword!: boolean;\r\n  urlRoute: string = 'daily/home/dashboard';\r\n  loginSubscription!: Subscription;\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private router: Router,\r\n    private confirmationService: ConfirmationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n  onSubmit() {\r\n    let user: User = this.loginForm.value;\r\n    this.loginSubscription = this.authenticationService\r\n      .login(user)\r\n      .subscribe((response: any) => {\r\n        console.log('userData', response);\r\n        if (response.statusCode == 0) {\r\n          let privileges = response.payload.user.profileModel.privileges;\r\n          let userId = response.payload.user.userId;\r\n          let userName = response.payload.user.username;\r\n          localStorage.setItem('userId', JSON.stringify(userId));\r\n          localStorage.setItem('userName', JSON.stringify(userName));\r\n          localStorage.setItem('privileges', JSON.stringify(privileges));\r\n          this.authenticationService\r\n            .storeToken(\r\n              response.payload.user.username,\r\n              'Bearer ' + response.payload.token\r\n            )\r\n            .subscribe((response: any) => {\r\n              console.log('Token Stored :', response.statusCode);\r\n              console.log('urlRoute :', this.urlRoute);\r\n              response.statusCode == 0\r\n                ? this.router.navigateByUrl(this.urlRoute)\r\n                : '';\r\n            });\r\n        } else if (response.statusCode == -422) {\r\n          this.logout();\r\n        }\r\n      });\r\n  }\r\n  logout() {\r\n    this.confirmationService.confirm({\r\n      // target: event.target,\r\n      message: 'Would you like to end the active session of this user?',\r\n      icon: 'pi pi-exclamation-triangle',\r\n      accept: () => {\r\n        //confirm action\r\n        this.authenticationService\r\n          .logout(this.loginForm.value.username)\r\n          .subscribe();\r\n      },\r\n      reject: () => {\r\n        //reject action\r\n      },\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.loginSubscription?.unsubscribe();\r\n  }\r\n}\r\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" class=\"login-form\">\r\n  <div class=\"label form-header text-center\">\r\n    <span>Sign in to the DAP app</span>\r\n    <img class=\"pt-5\" src=\"./assets/images/icons/Path_81.svg\" />\r\n  </div>\r\n\r\n  <div class=\"label mt-4\">\r\n    <label for=\"username\">Username</label>\r\n    <div class=\"input-container\">\r\n      <i class=\"icon icon-margin icon-user\"></i>\r\n      <input\r\n        required\r\n        class=\"login-input placeholder mt-3\"\r\n        name=\"username\"\r\n        formControlName=\"username\"\r\n        placeholder=\"Enter your username...\"\r\n        maxlength=\"50\"\r\n      />\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"label mt-4\">\r\n    <label for=\"password\">Password</label>\r\n    <div class=\"input-container\">\r\n      <i class=\"icon icon-margin icon-lock\"></i>\r\n      <input\r\n        #passwordInput\r\n        required\r\n        class=\"login-input placeholder mt-3\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        formControlName=\"password\"\r\n        placeholder=\"Enter The Password...\"\r\n        maxlength=\"50\"\r\n      />\r\n      <i\r\n        [ngClass]=\"\r\n          passwordInput.value && passwordInput.type == 'password'\r\n            ? 'icon eye icon-eye'\r\n            : passwordInput.value && passwordInput.type == 'text'\r\n            ? 'icon eye icon-eye-dash'\r\n            : ''\r\n        \"\r\n        (click)=\"\r\n          passwordInput.type == 'password'\r\n            ? (passwordInput.type = 'text')\r\n            : (passwordInput.type = 'password')\r\n        \"\r\n      ></i>\r\n    </div>\r\n  </div>\r\n  <button\r\n    [ngClass]=\"\r\n      loginForm.valid\r\n        ? 'login-button login-active mt-5'\r\n        : 'login-button bg-gray-400 mt-5'\r\n    \"\r\n    [disabled]=\"!loginForm.valid\"\r\n    type=\"submit\"\r\n  >\r\n    Login\r\n  </button>\r\n  <!-- <div class=\"mt-3 text-center\">\r\n    <a href=\"\" class=\"label text-sm\">Forget Password</a>\r\n  </div> -->\r\n</form>\r\n<p-confirmDialog\r\n  class=\"confirm-dialog\"\r\n  header=\"Logout\"\r\n  icon=\"pi pi-exclamation-triangle\"\r\n></p-confirmDialog>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor( \r\n) {}\r\n\r\n  ngOnInit(): void {}\r\n  \r\n\r\n}\r\n","<div class=\"login row flex p-0\">\r\n  <div\r\n    class=\"col-6 h-screen p-0 bg-linear-red grid align-content-center justify-content-center text-center\"\r\n  >\r\n    <img\r\n      src=\" ./assets/images/logo/Vodafone_2017_logo.svg\"\r\n      alt=\"vodafone-logo\"\r\n    />\r\n    <div class=\"logo-text-color bottom-0\">\r\n      <div><span> The Control Panel of DAP application </span></div>\r\n      <div class=\"mt-3 mb-3\"><span> All rights reserved </span></div>\r\n    </div>\r\n  </div>\r\n  <div\r\n    class=\"col-6 h-screen bg-login grid align-content-center justify-content-center\"\r\n  >\r\n    <app-login-form class=\"index\"></app-login-form>\r\n    <img\r\n      class=\"background\"\r\n      src=\" ./assets/images/logo/Path 80.svg \"\r\n      overflow-x-visible=\"hidden\"\r\n      alt=\"vodafone-logo\"\r\n    />\r\n  </div>\r\n\r\n \r\n</div>\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoggedGuard } from './guards/logged.guard';\nimport { LoginLayoutComponent } from './layout/login-layout/login-layout.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'login', pathMatch: 'full',canActivate: [LoggedGuard] },\n  { path: 'login', component: LoginLayoutComponent ,canActivate: [LoggedGuard] }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login-layout',\n  templateUrl: './login-layout.component.html',\n  styleUrls: ['./login-layout.component.scss']\n})\nexport class LoginLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"layout\">\n  <app-login></app-login>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { LoginLayoutComponent } from './layout/login-layout/login-layout.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { LoginFormComponent } from './components/login-form/login-form.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, LoginLayoutComponent, LoginFormComponent],\r\n  imports: [CommonModule, AuthenticationRoutingModule, SharedModule],\r\n})\r\nexport class AuthenticationModule { }\r\n"]}