{"version":3,"file":"main.js","mappings":"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","names":["PrivilegesGuard","constructor","privilegesServices","router","this","canActivate","route","state","checkPrivileges","data","privilege","navigateByUrl","i0","factory","AuthenticationService","http","HttpHeaders","login","loginInfo","post","environment","Defines","logout","userName","username","HeaderService","Subject","localStorage","getItem","getNotifications","pathUrl","ExportExcelService","exportAsExcelFile","json","excelFileName","myworkbook","Sheets","XLSX","SheetNames","excelBuffer","bookType","type","saveAsExcelFile","buffer","fileName","Blob","EXCEL_TYPE","FileSaver","EXCEL_EXTENSION","FootprintService","footprintRequest","footprint","getFootprintsRequest","body","handleOldValue","value","key","Array","isArray","oldValue","filterKey","handleNewValue","newValue","filterKeyNew","filterOldValues","filterValues","map","val","changedVal","filter","item","length","push","oldValues","newValues","identifier","addMultipeNewVal","handlePriceGroupOldValue","response","oldpriceGroups","payload","priceGroupModel","priceGroupCode","pgGroupKey","E","_a","handleRateplansoldValue","ratePlans","ratePlanCode","ratePlanGroupKey","showFlag","getTodayInTime","epochDate","Date","parse","PrivilegesService","profilePrivileges","JSON","p","find","id","SharedModule","ConfirmationService","imports","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","ButtonModule","CalendarModule","BadgeModule","TableModule","MultiSelectModule","DropdownModule","PickListModule","InputTextModule","TabMenuModule","InputSwitchModule","DialogModule","ConfirmDialogModule","CheckboxModule","ChartModule","OverlayPanelModule","AccordionModule","ListboxModule","ClipboardModule","LOGIN_PATH","LOGOUT_PATH","GET","ADD","UPDATE","DELETE","GET_ALL","UPDATE_ALL","UPDATE_BATCH","USERS_MANAGEMENT_PATH","USER","GET_PROFILES_LIST","GET_PROFILE_BY_ID","CREATE_PROFILE","UPDATE_PROFILE","DELETE_PROFILE","PRIVILEGE","RATEPALN","RATEPALNGROUPS","DAILY","USERS","LIST","PROIFLES","PRICES","PGGROUPS","NON_AUTH","SUCCESS","NO_DATA","LOOKUP_PATH","CLASSES","TARIFFS","PG","REPORT_SERVICE","VALIDATION_ENGINE","AGGREGATION_DATA","BALANCES","TRANSACTION_TYPE","DASH_BOARD","MANUAL_ADJUSTMENT","TRANSFER_ADJUSTMENT","CONFIG_SERVICE","SYSTEM_SETTING","ACTUATOR","REFRESH","NOTIFICATION_SERVICE","NOTIFICATIONS","SERVICE_CLASS","TARRIF_MODEL","PRICE_GROUP","RATE_PALEN","LOGGING_SERVICE","LOGGING","ADD_LOG","GET_LOGS","PRIVILEGES","GET_BY_ID","UPDATE_lIST","BALANCE","UPDATE_ACTION","MAX_MIN_AGG_DATE","production","url","routes","extraOptions","enableTracing","onSameUrlNavigation","useHash","AppRoutingModule","RouterModule","AppComponent","selectors","AuthGuard","AccessDeniedComponent","ngOnInit","LoaderService","loaderSubject","BehaviorSubject","loaderState$","console","log","asObservable","show","next","hide","SidebarService","ctx_r6","oxw","SidebarComponent","sidebarService","privilegesService","icon","title","name","active","viewClasses","viewPrices","viewRateplans","sidebarItems","toggle","stateName","stateSubject","onSelectItem","activeItem","setItem","ctx","trigger","style","transform","transition","animate","_r2","MAs","ctx_r10","HeaderComponent","headerService","authenticationService","Audio","viewNotification","getNotfic","interval","setInterval","dateValue","calendarDate","String","DateSubject","change","alert","resp","audio","play","undefined","then","_","catch","error","subscribe","notifications","o","e","c","_b","notificationsSubject","ngOnDestroy","clearInterval","getPage","notic","op","event","notificationType","clear","path","loadChildren","i","mod","AuthenticationModule","component","loaderService","cdr","sidebarSubscription","ngAfterViewInit","detectChanges","unsubscribe","MainLayoutComponent","MessageService","decls","children","Promise","UsersModule","ProfilesModule","ServicesTariffsModule","RateplansModule","PricesModule","ValidationModule","ManualAdjustmentModule","TransferAdjustmentModule","HomePageModule","FootprintLogsModule","ConfigSystemModule","CoreRoutingModule","ToastMessageService","messageService","primengConfig","ripple","showSuccess","summary","detail","sticky","add","severity","showInfo","showWarn","showError","HttpRequestInterceptor","toastMessageService","footprintService","intercept","request","includes","req","prework","handle","pipe","tap","HttpResponse","postwork","requestBody","clone","headers","Object","token","fullHeaders","set","responseBody","h","_c","G","_d","user","handleError","crud","statusCode","values","x","statusMessage","refreshFlag","message","httpRequestInterceptor","provide","HTTP_INTERCEPTORS","useClass","multi","CoreModule","BrowserAnimationsModule","NgxLoadingModule","animationType","ngxLoadingAnimationTypes","AppModule","bootstrap","BrowserModule","ToastModule","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","err"],"sourceRoot":"webpack:///","sources":["./src/app/authentication/guards/privileges.guard.ts","./src/app/authentication/services/authentication.service.ts","./src/app/core/services/header-service/header.service.ts","./src/app/shared/services/exportExcel-service/export-excel.service.ts","./src/app/shared/services/footprint-service/footprint.service.ts","./src/app/shared/services/privileges-service/privileges.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/statics/defines.ts","./src/app/shared/statics/privileges.ts","./src/environments/environment.asset-test.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/authentication/guards/auth.guard.ts","./src/app/core/layout/access-denied/access-denied.component.ts","./src/app/core/layout/access-denied/access-denied.component.html","./src/app/core/services/loader-service/loader.service.ts","./src/app/core/services/sidebar-service/sidebar.service.ts","./src/app/core/components/sidebar/sidebar.component.html","./src/app/core/components/sidebar/sidebar.component.ts","./src/app/core/components/header/header.component.html","./src/app/core/components/header/header.component.ts","./src/app/core/layout/main-layout/main-layout.component.html","./src/app/core/core-routing.module.ts","./src/app/core/layout/main-layout/main-layout.component.ts","./src/app/core/services/toast-message-service/toast-message.service.ts","./src/app/core/interceptors/http-request.interceptor.ts","./src/app/core/core.module.ts","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { PrivilegesService } from 'src/app/shared/services/privileges-service/privileges.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PrivilegesGuard implements CanActivate {\r\n  constructor(\r\n    private privilegesServices: PrivilegesService,\r\n    private router: Router\r\n  ) {}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    if (this.privilegesServices.checkPrivileges(route.data['privilege'])) {\r\n      return true;\r\n    } else {\r\n      this.router.navigateByUrl('daily/accessDenied');\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Defines } from 'src/app/shared/statics/defines';\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../../users/models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n  headers = new HttpHeaders({ 'Content-Type': 'application/json' });\r\n\r\n  constructor(private router: Router, private http: HttpClient) {}\r\n\r\n  login(loginInfo: User) {\r\n    return this.http.post(\r\n      environment.url +\r\n        Defines.USERS_ENDPOINTS.USERS_MANAGEMENT_PATH +\r\n        Defines.AUTH_ENDPOINTS.LOGIN_PATH,\r\n      loginInfo\r\n    );\r\n  }\r\n\r\n  logout(userName: string) {\r\n    return this.http.post(\r\n      environment.url +\r\n        Defines.USERS_ENDPOINTS.USERS_MANAGEMENT_PATH +\r\n        Defines.AUTH_ENDPOINTS.LOGOUT_PATH,\r\n      { username: userName }\r\n    )\r\n  }\r\n}\r\n","import { HttpClient, HttpRequest } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ApiResponse } from 'src/app/shared/statics/apiResponse';\r\nimport { Defines } from 'src/app/shared/statics/defines';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HeaderService {\r\n  DateSubject = new Subject<number>();\r\n  notificationsSubject = new Subject<any[]>();\r\n  calendarDate: any = localStorage.getItem('date');\r\n  pathUrl: string =\r\n    environment.url +\r\n    Defines.NOTIFICTION_ENDPOINTS.NOTIFICATION_SERVICE +\r\n    Defines.NOTIFICTION_ENDPOINTS.NOTIFICATIONS;\r\n  constructor(private http: HttpClient) {}\r\n  public getNotifications() {\r\n    let pathUrl = this.pathUrl + Defines.CRUD.GET_ALL;\r\n    return this.http.post<ApiResponse<Notification[]>>(pathUrl, {});\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as FileSaver from 'file-saver';\r\nimport * as XLSX from 'xlsx';\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ExportExcelService {\r\n  EXCEL_TYPE =\r\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\r\n  EXCEL_EXTENSION = '.xlsx';\r\n  constructor() {}\r\n\r\n  public exportAsExcelFile(json: any[], excelFileName: string): void {\r\n    const myworksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet(json);\r\n    const myworkbook: XLSX.WorkBook = {\r\n      Sheets: { data: myworksheet },\r\n      SheetNames: ['data'],\r\n    };\r\n    const excelBuffer: any = XLSX.write(myworkbook, {\r\n      bookType: 'xlsx',\r\n      type: 'array',\r\n    });\r\n    this.saveAsExcelFile(excelBuffer, excelFileName);\r\n  }\r\n\r\n  private saveAsExcelFile(buffer: any, fileName: string): void {\r\n    const data: Blob = new Blob([buffer], {\r\n      type: this.EXCEL_TYPE,\r\n    });\r\n    FileSaver.saveAs(data, fileName + '_exported' + this.EXCEL_EXTENSION);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Footprint } from '../../models/footprint';\r\nimport { ApiResponse } from '../../statics/apiResponse';\r\nimport { Defines } from '../../statics/defines';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FootprintService {\r\n  oldValue!: any;\r\n  newValue!: any;\r\n  objectIdentifier!: any;\r\n  filterKey!: string;\r\n  filterKeyNew!: string;\r\n  filterValues!: any[];\r\n  footprintSubject = new Subject<any>();\r\n  openDialog = new Subject<{ show: boolean; empty: boolean; data?: any }>();\r\n  refreshFlag!: boolean;\r\n  constructor(private http: HttpClient) {}\r\n  footprintRequest(footprint: Footprint) {\r\n    let body = footprint;\r\n    return this.http.post<ApiResponse<any>>(\r\n      environment.url +\r\n        Defines.FOOTPRINT.LOGGING_SERVICE +\r\n        Defines.FOOTPRINT.LOGGING +\r\n        Defines.FOOTPRINT.ADD_LOG,\r\n      body\r\n    );\r\n  }\r\n\r\n  getFootprintsRequest(body: any) {\r\n    // return this.http.post<ApiResponse<any>>(\r\n    //   environment.url +\r\n    //     Defines.FOOTPRINT.LOGGING_SERVICE +\r\n    //     Defines.FOOTPRINT.LOGGING +\r\n    //     Defines.FOOTPRINT.GET_LOGS,\r\n    //   body\r\n    // );\r\n  }\r\n\r\n  handleOldValue(value: any, key?: string) {\r\n    if (Array.isArray(value)) {\r\n      this.oldValue = [];\r\n      this.filterKey = key ? key : '';\r\n      this.oldValue = value;\r\n    } else this.oldValue = value;\r\n  }\r\n  handleNewValue(value: any, key?: string) {\r\n    if (Array.isArray(value)) {\r\n      this.newValue = [];\r\n      this.filterKeyNew = key ? key : '';\r\n      this.newValue = value;\r\n    } else this.newValue = value;\r\n  }\r\n\r\n  filterOldValues() {\r\n    // this method to return only old data before changed (update patch case)\r\n    this.filterValues = [];\r\n    if (Array.isArray(this.oldValue)) {\r\n      this.oldValue.map((val) => {\r\n        let changedVal = this.newValue.filter(\r\n          (item: any) => item[this.filterKey] == val[this.filterKey]\r\n        );\r\n        let identifierId = val[this.filterKey];\r\n        let allValues = {\r\n          oldValues: val,\r\n          newValues: changedVal[0],\r\n          identifier: identifierId,\r\n        };\r\n        if (changedVal.length) this.filterValues.push(allValues);\r\n      });\r\n    }\r\n    return this.filterValues;\r\n  }\r\n\r\n  addMultipeNewVal() {\r\n    this.filterValues = [];\r\n    if (Array.isArray(this.newValue)) {\r\n      this.newValue.map((val) => {\r\n        let identifierId = val[this.filterKeyNew];\r\n        let allValues = {\r\n          oldValues: {},\r\n          newValues: val,\r\n          identifier: identifierId,\r\n        };\r\n        this.filterValues.push(allValues);\r\n      });\r\n    }\r\n    return this.filterValues;\r\n  }\r\n  handlePriceGroupOldValue(response: any) {\r\n    let oldpriceGroups = response.payload.priceGroupModel.map((item: any) => {\r\n      let oldValue = {\r\n        priceGroupCode: item.priceGroupCode,\r\n        pgGroupKey: item.pgGroupKey?.pgGroupKey,\r\n      };\r\n      return oldValue;\r\n    });\r\n    this.handleOldValue(oldpriceGroups, 'priceGroupCode');\r\n  }\r\n\r\n  handleRateplansoldValue(ratePlans: any[]) {\r\n    let requriedValues = ratePlans.map((item) => {\r\n      return {\r\n        ratePlanCode: item.ratePlanCode,\r\n        ratePlanGroupKey: item.ratePlanGroupKey,\r\n        showFlag: item.showFlag,\r\n      };\r\n    });\r\n    return requriedValues;\r\n  }\r\n\r\n  getTodayInTime() {\r\n    let epochDate: any = new Date();\r\n    epochDate = Date.parse(epochDate);\r\n    return epochDate;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PrivilegesService {\r\n  constructor() {}\r\n  checkPrivileges(privilege: number) {\r\n    let profilePrivileges = JSON.parse('' + localStorage.getItem('privileges'));\r\n    let exist = profilePrivileges?.find((item: any) => item.id === privilege);\r\n    if (exist) return true;\r\n    else return false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { CalendarModule } from 'primeng/calendar';\r\nimport { BadgeModule } from 'primeng/badge';\r\nimport { TableComponent } from './components/table/table.component';\r\nimport { TableModule } from 'primeng/table';\r\nimport { MultiSelectModule } from 'primeng/multiselect';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\nimport { InputTextModule } from 'primeng/inputtext';\r\nimport { PickListModule } from 'primeng/picklist';\r\nimport { TabMenuModule } from 'primeng/tabmenu';\r\nimport { InputSwitchModule } from 'primeng/inputswitch';\r\nimport { DialogComponent } from './components/dialog/dialog.component';\r\nimport { DialogModule } from 'primeng/dialog';\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { ConfirmationService } from 'primeng/api';\r\nimport { ServicesListComponent } from './components/services-list/services-list.component';\r\nimport { ServiceFormComponent } from './components/service-form/service-form.component';\r\nimport { CheckboxModule } from 'primeng/checkbox';\r\nimport { ColorfulHeaderComponent } from './components/colorful-header/colorful-header.component';\r\nimport { ChartModule } from 'primeng/chart';\r\nimport { OverlayPanelModule } from 'primeng/overlaypanel';\r\nimport { AccordionModule } from 'primeng/accordion';\r\nimport { ListboxModule } from 'primeng/listbox';\r\nimport { ExportExcelService } from './services/exportExcel-service/export-excel.service';\r\nimport { ClipboardModule } from 'ngx-clipboard';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TableComponent,\r\n    DialogComponent,\r\n    ServicesListComponent,\r\n    ServiceFormComponent,\r\n    ColorfulHeaderComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ButtonModule,\r\n    CalendarModule,\r\n    BadgeModule,\r\n    TableModule,\r\n    MultiSelectModule,\r\n    DropdownModule,\r\n    PickListModule,\r\n    InputTextModule,\r\n    TabMenuModule,\r\n    InputSwitchModule,\r\n    DialogModule,\r\n    ConfirmDialogModule,\r\n    CheckboxModule,\r\n    ChartModule,\r\n    OverlayPanelModule,\r\n    AccordionModule,\r\n    ListboxModule,\r\n    ClipboardModule\r\n  ],\r\n  exports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    ButtonModule,\r\n    CalendarModule,\r\n    BadgeModule,\r\n    TableModule,\r\n    TableComponent,\r\n    DialogComponent,\r\n    MultiSelectModule,\r\n    DropdownModule,\r\n    PickListModule,\r\n    InputTextModule,\r\n    TabMenuModule,\r\n    InputSwitchModule,\r\n    DialogModule,\r\n    ConfirmDialogModule,\r\n    ServicesListComponent,\r\n    ServiceFormComponent,\r\n    CheckboxModule,\r\n    ColorfulHeaderComponent,\r\n    ChartModule,\r\n    OverlayPanelModule,\r\n    AccordionModule,\r\n    ListboxModule,\r\n    ClipboardModule\r\n  ],\r\n  providers: [ConfirmationService,ExportExcelService],\r\n})\r\nexport class SharedModule {}\r\n","export class Defines {\r\n  public static AUTH_ENDPOINTS = {\r\n    LOGIN_PATH: '/login',\r\n    LOGOUT_PATH: '/logout',\r\n  };\r\n  public static CRUD = {\r\n    GET: '/get',\r\n    ADD: '/add',\r\n    UPDATE: '/update',\r\n    DELETE: '/delete',\r\n    GET_ALL: '/get-all',\r\n    UPDATE_ALL: '/update-all',\r\n    UPDATE_BATCH: '/update-batch',\r\n  };\r\n  public static USERS_ENDPOINTS = {\r\n    USERS_MANAGEMENT_PATH: '/user-management-service',\r\n    USER: '/user',\r\n  };\r\n  public static PROFILES_ENDPOINTS = {\r\n    GET_PROFILES_LIST: '/profile/get-all',\r\n    GET_PROFILE_BY_ID: '/profile/get',\r\n    CREATE_PROFILE: '/profile/add',\r\n    UPDATE_PROFILE: '/profile/update',\r\n    DELETE_PROFILE: '/profile/delete',\r\n  };\r\n  public static PRIVILEGES_ENDPOINTS = {\r\n    PRIVILEGE: '/privilege',\r\n  };\r\n  public static RATEPLANS_ENDPOINTS = {\r\n    RATEPALN: '/rate-plan',\r\n    RATEPALNGROUPS: '/rate-plan-groups',\r\n  };\r\n\r\n  public static ROUTES = {\r\n    DAILY: 'daily',\r\n    USERS: 'users',\r\n    LIST: 'list',\r\n    PROIFLES: 'profiles',\r\n    PRICES: 'prices',\r\n    PGGROUPS: 'pgGroups',\r\n    ADD: 'add',\r\n  };\r\n\r\n  public static RESPONSE_STATUS = {\r\n    NON_AUTH: -402,\r\n    SUCCESS: 0,\r\n    NO_DATA: -421,\r\n  };\r\n\r\n  public static LOOKUPS = {\r\n    LOOKUP_PATH: '/lookup-service',\r\n    CLASSES: '/service-classes',\r\n    TARIFFS: '/tariff-model',\r\n    PRICES: '/price-group',\r\n    PG: '/price-group-groups',\r\n  };\r\n\r\n  public static VALIDATION_ENDPOINTS = {\r\n    REPORT_SERVICE: '/report-service',\r\n    VALIDATION_ENGINE: '/validation-engine',\r\n    AGGREGATION_DATA: '/agg-data',\r\n    BALANCES: '/balances',\r\n    TRANSACTION_TYPE: '/transaction-type',\r\n    DASH_BOARD: '/dashboard',\r\n  };\r\n\r\n  public static ADJUSTMENT_ENDPOINTS = {\r\n    REPORT_SERVICE: '/report-service',\r\n    MANUAL_ADJUSTMENT: '/manual-adjustment',\r\n    AGGREGATION_DATA: '/agg-data',\r\n  };\r\n  public static TRANSFER_ENDPOINTS = {\r\n    REPORT_SERVICE: '/report-service',\r\n    TRANSFER_ADJUSTMENT: '/transfer-adjustment',\r\n    AGGREGATION_DATA: '/agg-data',\r\n  };\r\n  public static SYSTEM_CONFIG_ENDPOINTS = {\r\n    CONFIG_SERVICE: '/config-service',\r\n    SYSTEM_SETTING: '/system-setting',\r\n    ACTUATOR: '/actuator',\r\n    REFRESH: '/refresh',\r\n  };\r\n  public static NOTIFICTION_ENDPOINTS = {\r\n    NOTIFICATION_SERVICE: '/notification-service',\r\n    NOTIFICATIONS: '/notifications',\r\n  };\r\n  public static NOTIFICATION_TYPE = {\r\n    SERVICE_CLASS: 1,\r\n    TARRIF_MODEL: 2,\r\n    PRICE_GROUP: 3,\r\n    RATE_PALEN: 4,\r\n  };\r\n  public static FOOTPRINT = {\r\n    LOGGING_SERVICE: '/logging-service',\r\n    LOGGING: '/logging',\r\n    ADD_LOG: '/add-logs',\r\n    GET_LOGS: '/get-logs',\r\n  };\r\n}\r\n","export class PRIVILEGES {\r\n  public static USERS_MANAGMENT = {\r\n    GET_ALL: 1,\r\n    GET_BY_ID:2,\r\n    ADD: 3,\r\n    UPDATE: 4,\r\n    DELETE: 5,\r\n  };\r\n  public static PROFILES_MANAGMENT = {\r\n    GET_ALL: 8,\r\n    GET_BY_ID:7,\r\n    ADD: 6,\r\n    UPDATE: 10,\r\n    DELETE: 9,\r\n  };\r\n  public static SERVICES_CLASSES = {\r\n    GET_ALL: 11,\r\n    UPDATE: 12,\r\n  };\r\n  public static SERVICES_TARIFFS = {\r\n    GET_ALL: 13,\r\n    UPDATE: 14,\r\n  };\r\n\r\n  public static RATE_PLANS = {\r\n    GET_ALL: 15,\r\n    UPDATE: 16,\r\n    UPDATE_lIST: 17,\r\n  };\r\n  public static RATE_PLANS_GROUP = {\r\n    GET_ALL: 18,\r\n    GET_BY_ID:19,\r\n    ADD: 21,\r\n    UPDATE: 20,\r\n    DELETE: 22,\r\n  };\r\n  public static PRICE_GROUP = {\r\n    GET_ALL: 23,\r\n    UPDATE: 24,\r\n  };\r\n  public static PG_GROUP = {\r\n    GET_ALL: 25,\r\n    GET_BY_ID:29,\r\n    ADD: 26,\r\n    UPDATE: 27,\r\n    DELETE: 30,\r\n  };\r\n\r\n  public static VALIDATION = {\r\n    BALANCE:31,\r\n    GET_ALL: 32,\r\n    UPDATE: 34,\r\n  };\r\n\r\n  public static MANUAL_ADJUSTMENT = {\r\n    GET_ALL: 35,\r\n    UPDATE: 36,\r\n  };\r\n\r\n  public static TRANSFER_ADJUSTMENT = {\r\n    GET_ALL: 37,\r\n    UPDATE: 38,\r\n  };\r\n  public static NOTIFICATIONS = {\r\n    GET_ALL: 39,\r\n    UPDATE_ACTION:40\r\n  };\r\n  public static CONFIGRATION = {\r\n    GET_ALL: 44,\r\n    UPDATE:41\r\n  };\r\n  public static LOGS = {\r\n    GET_ALL: 42,\r\n  };\r\n  public static DASHBOARD = {\r\n    MAX_MIN_AGG_DATE: 43,\r\n  };\r\n\r\n\r\n}\r\n","export const environment = {\r\n  production: false,\r\n  // url: 'http://10.0.20.89:7073', // asset\r\n  url: 'https://10.179.9.194:8080',// vodafone\r\n};","import { NgModule } from '@angular/core';\r\nimport { ExtraOptions, RouterModule, Routes } from '@angular/router';\r\n\r\nconst routes: Routes = [];\r\nconst extraOptions: ExtraOptions\r\n  = { enableTracing: false, onSameUrlNavigation: 'reload', useHash: true };\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, extraOptions)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule { }\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { MessageService, PrimeNGConfig } from 'primeng/api';\r\nimport { LoaderService } from './core/services/loader-service/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  title = 'Daily';\r\n}\r\n","<p-toast position=\"bottom-center\"></p-toast>\r\n<router-outlet></router-outlet>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router) {}\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    if (localStorage.getItem('token')) {\r\n      return true;\r\n    } else {\r\n      this.router.navigateByUrl('login');\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-access-denied',\n  templateUrl: './access-denied.component.html',\n  styleUrls: ['./access-denied.component.scss']\n})\nexport class AccessDeniedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"page-container\">\n    <div class=\"row d-flex justify-content-center align-items-center text-center h-100\">\n        <div class=\"text-center\">\n            <img src=\"./assets/images/logo/logo_2x.png\" />\n            <h1 class=\"header-unauth\"><code class=\"color-red\">Access Denied</code></h1>\n            <hr class=\"\" style=\"margin: auto; width: 50%\" />\n            <h3 class=\"color-light-grey\">You don't have permission to view this page.</h3>\n            <i class=\"pi pi-ban\" style=\"font-size: 3rem; color: #ed1b2e\"></i>\n        </div>\n    </div>\n</div>\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LoaderService {\r\n  showLoader = false;\r\n  loaderSubject: BehaviorSubject<boolean>;\r\n\r\n  constructor() {\r\n    this.loaderSubject = new BehaviorSubject<boolean>(false);\r\n  }\r\n\r\n  get loaderState$(): Observable<boolean> {\r\n    console.log(this.loaderSubject.value);\r\n    return this.loaderSubject.asObservable();\r\n  }\r\n\r\n  public show() {\r\n    console.log(true);\r\n\r\n    this.loaderSubject.next(true);\r\n  }\r\n\r\n  public hide() {\r\n    console.log(false);\r\n\r\n    this.loaderSubject.next(false);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SidebarService {\r\n  stateSubject = new Subject<string>();\r\n  constructor() {}\r\n}\r\n","<div class=\"sidebar\">\n  <div class=\"toggle-btn\" [ngClass]=\"state === 'open' ? 'openState' : ''\">\n    <span\n      [@rotatedState]=\"state\"\n      class=\"icon-arrow-circle\"\n      (click)=\"toggle()\"\n    ></span>\n    <span class=\"toggle-state\">{{ stateName }} </span>\n  </div>\n  <div class=\"side-items\" [ngClass]=\"state === 'open' ? 'sidebarOpen' : ''\">\n    <ul>\n      <li *ngFor=\"let item of sidebarItems\">\n        <a [ngClass]=\"item.active ? 'active' : ''\" (click)=\"onSelectItem(item)\">\n          <span class=\"{{ item.icon }}\"></span>\n          <span\n            *ngIf=\"state === 'close'\"\n            class=\"name\"\n            [ngClass]=\"item.route === 'systemConfig' ? 'font' : ''\"\n            >{{ item.name }}</span\n          >\n          <span *ngIf=\"state === 'open'\" class=\"title\"> {{ item.title }} </span>\n        </a>\n        <hr class=\"divider\" />\n      </li>\n    </ul>\n  </div>\n</div>\n","import {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from '@angular/animations';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PrivilegesService } from 'src/app/shared/services/privileges-service/privileges.service';\r\nimport { PRIVILEGES } from 'src/app/shared/statics/privileges';\r\nimport { Sidebar } from '../../models/sidebar.model';\r\nimport { SidebarService } from '../../services/sidebar-service/sidebar.service';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss'],\r\n  animations: [\r\n    // Each unique animation requires its own trigger. The first argument of the trigger function is the name\r\n    trigger('rotatedState', [\r\n      state('close', style({ transform: 'rotate(0)' })),\r\n      state('open', style({ transform: 'rotate(-180deg)' })),\r\n      transition('open => close', animate('200ms ease-out')),\r\n      transition('close => open', animate('200ms ease-in')),\r\n    ]),\r\n  ],\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  state: string = 'close';\r\n  stateName: string = 'Expand';\r\n  sidebarItems: Sidebar[] = [\r\n    {\r\n      icon: 'icon-home',\r\n      title: 'Home Page',\r\n      name: 'Home',\r\n      active: true,\r\n      route: 'home',\r\n    },\r\n    {\r\n      icon: 'icon-services',\r\n      title: 'Organize Service Classes/Tariffs',\r\n      name: 'Service',\r\n      active: false,\r\n      route: 'services',\r\n    },\r\n    {\r\n      icon: 'icon-mark',\r\n      title: 'Rateplans',\r\n      name: 'Rateplans',\r\n      active: false,\r\n      route: 'rateplans',\r\n    },\r\n    {\r\n      icon: 'icon-rateplan',\r\n      title: 'Manage Price Group',\r\n      name: 'Prices',\r\n      active: false,\r\n      route: 'prices',\r\n    },\r\n    {\r\n      icon: 'icon-chart',\r\n      title: 'Manage Validation',\r\n      name: 'Validation',\r\n      active: false,\r\n      route: 'validation',\r\n    },\r\n    {\r\n      icon: 'icon-manual',\r\n      title: 'Manual Adjustment',\r\n      name: 'Manual',\r\n      active: false,\r\n      route: 'manual',\r\n    },\r\n    {\r\n      icon: 'icon-transfer',\r\n      title: 'Transfer Adjustment',\r\n      name: 'Transfer',\r\n      active: false,\r\n      route: 'transfer',\r\n    },\r\n    {\r\n      icon: 'icon-setting',\r\n      title: 'Manage Users',\r\n      name: 'Users',\r\n      active: false,\r\n      route: 'users',\r\n    },\r\n    {\r\n      icon: 'icon-profiles',\r\n      title: 'Profiles Management',\r\n      name: 'Profiles',\r\n      active: false,\r\n      route: 'profiles',\r\n    },\r\n    // {\r\n    //   icon: 'icon-footprint',\r\n    //   title: 'Footprint Logs',\r\n    //   name: 'Footprint',\r\n    //   active: false,\r\n    //   route: 'footprint',\r\n    // },\r\n    {\r\n      icon: 'pi pi-cog',\r\n      title: 'System Configuration',\r\n      name: 'Configuration',\r\n      active: false,\r\n      route: 'systemConfig',\r\n    },\r\n  ];\r\n  viewClasses!: boolean;\r\n  viewPrices!: boolean;\r\n  viewRateplans!: boolean;\r\n  constructor(\r\n    private sidebarService: SidebarService,\r\n    private router: Router,\r\n    private privilegesService: PrivilegesService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.viewClasses = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.SERVICES_CLASSES.GET_ALL\r\n    );\r\n    this.viewPrices = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.PRICE_GROUP.GET_ALL\r\n    );\r\n    this.viewRateplans = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.RATE_PLANS.GET_ALL\r\n    );\r\n\r\n    if (localStorage.getItem('activeItem')) {\r\n      this.sidebarItems.map((item) => {\r\n        item.active =\r\n          localStorage.getItem('activeItem') === item.name ? true : false;\r\n      });\r\n    }\r\n  }\r\n\r\n  toggle() {\r\n    this.state = this.state === 'close' ? 'open' : 'close';\r\n    this.stateName = this.state === 'close' ? 'Expand' : 'Minimize';\r\n    this.sidebarService.stateSubject.next(this.state);\r\n  }\r\n\r\n  onSelectItem(activeItem: Sidebar) {\r\n    console.log('Selected item', activeItem);\r\n    localStorage.setItem('activeItem', activeItem.name);\r\n    activeItem.active = true;\r\n    this.sidebarItems.map((item) => {\r\n      item.active = activeItem.name === item.name ? true : false;\r\n    });\r\n    let url = 'daily/' + activeItem.route;\r\n    if (!this.viewClasses && activeItem.route == 'services') {\r\n      url = 'daily/services/tariffs';\r\n    } else if (!this.viewPrices && activeItem.route == 'prices') {\r\n      url = 'daily/prices/pgGroups';\r\n    } else if (!this.viewRateplans && activeItem.route == 'rateplans') {\r\n      url = 'daily/rateplans/rateplansGroups';\r\n    }\r\n    this.router.navigateByUrl(url);\r\n  }\r\n}\r\n","<header class=\"header justify-content-between\">\r\n  <div class=\"logo-img\">\r\n    <img src=\"./assets/images/logo/vodafonWhiteLogo.svg\" />\r\n  </div>\r\n  <div class=\"rightSide justify-content-end\" #navContainer>\r\n    <!-- <span class=\"icon icon-bell1\" pBadge  severity=\"danger\"  styleClass=\"p-overlay-badge\"></span> -->\r\n\r\n    <i\r\n      *ngIf=\"viewNotification\"\r\n      class=\"pi pi-bell\"\r\n      pBadge\r\n      value=\"{{ notifications ? notifications.length : 0 }}\"\r\n      severity=\"danger\"\r\n      styleClass=\"p-overlay-badge\"\r\n      (click)=\"op.toggle($event)\"\r\n      title=\"notifications\"\r\n    ></i>\r\n\r\n    <p-overlayPanel #op appendTo=\"body\">\r\n      <p-table\r\n        [value]=\"notifications\"\r\n        selectionMode=\"single\"\r\n        responsiveLayout=\"scroll\"\r\n      >\r\n        <ng-template pTemplate=\"header\"> </ng-template>\r\n        <ng-template pTemplate=\"body\" let-rowData>\r\n          <tr [pSelectableRow]=\"rowData\">\r\n            <td (click)=\"getPage(rowData, op, $event)\">\r\n              {{ rowData.notificationHeader }}\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n        <ng-template pTemplate=\"emptymessage\">\r\n          <tr>\r\n            <td colspan=\"7\" style=\"text-align: center\">\r\n              No Notification found.\r\n            </td>\r\n          </tr>\r\n        </ng-template>\r\n      </p-table>\r\n    </p-overlayPanel>\r\n    <span class=\"break\" *ngIf=\"viewNotification\">|</span>\r\n    <div class=\"calenderIcon\">\r\n      <p-calendar\r\n        [(ngModel)]=\"dateValue\"\r\n        styleClass=\"only-icon\"\r\n        [showIcon]=\"true\"\r\n        inputId=\"icon\"\r\n        [appendTo]=\"navContainer\"\r\n        (onSelect)=\"change()\"\r\n      ></p-calendar>\r\n      <span class=\"date\">{{ dateValue | date: \"dd-MMM-y\" }}</span>\r\n    </div>\r\n    <span class=\"break\">|</span>\r\n    <span class=\"text\">{{ userName }}</span>\r\n    <span class=\"pi pi-sign-out\" (click)=\"logout()\" title=\"logout\"></span>\r\n  </div>\r\n</header>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from 'src/app/authentication/services/authentication.service';\r\nimport { PrivilegesService } from 'src/app/shared/services/privileges-service/privileges.service';\r\nimport { Defines } from 'src/app/shared/statics/defines';\r\nimport { PRIVILEGES } from 'src/app/shared/statics/privileges';\r\nimport { HeaderService } from '../../services/header-service/header.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  dateValue!: any;\r\n  notifications!: string[];\r\n  interval!: any;\r\n  viewNotification!: boolean;\r\n  userName!: any;\r\n  audio = new Audio('./assets/sound/pull-out.wav');\r\n\r\n  constructor(\r\n    private headerService: HeaderService,\r\n    private router: Router,\r\n    private privilegesService: PrivilegesService,\r\n    private authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.userName = localStorage.getItem('activeUser');\r\n    this.viewNotification = this.privilegesService.checkPrivileges(\r\n      PRIVILEGES.NOTIFICATIONS.GET_ALL\r\n    );\r\n    this.viewNotification ? this.getNotfic() : '';\r\n    this.viewNotification\r\n      ? (this.interval = setInterval(() => this.getNotfic(), 30000))\r\n      : '';\r\n    this.dateValue = localStorage.getItem('date')\r\n      ? new Date(+this.headerService.calendarDate)\r\n      : new Date();\r\n    localStorage.setItem('date', String(Date.parse(this.dateValue)));\r\n    console.log(this.dateValue);\r\n    this.headerService.DateSubject.next(Date.parse(this.dateValue));\r\n  }\r\n  change() {\r\n    console.log(this.dateValue);\r\n\r\n    localStorage.setItem('date', Date.parse(this.dateValue) + '');\r\n    this.headerService.DateSubject.next(Date.parse(this.dateValue));\r\n  }\r\n  alert() {\r\n    var resp = this.audio.play();\r\n    if (resp !== undefined) {\r\n      resp.then((_) => {}).catch((error) => {});\r\n    }\r\n  }\r\n  getNotfic() {\r\n    this.headerService.getNotifications().subscribe((resp) => {\r\n      if (this.notifications) {\r\n        if (resp?.payload?.length > this.notifications?.length) {\r\n          this.alert();\r\n          console.log('new notification');\r\n        }\r\n      }\r\n      this.notifications = resp.payload;\r\n      //   .map((item: any) => {\r\n      //   return item.notificationHeader;\r\n      // });\r\n      this.headerService.notificationsSubject.next(resp.payload);\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.viewNotification ? clearInterval(this.interval) : '';\r\n  }\r\n  getPage(notic: any, op: any, event: any) {\r\n    console.log(notic);\r\n\r\n    notic.notificationType == Defines.NOTIFICATION_TYPE.PRICE_GROUP\r\n      ? this.router.navigateByUrl('/daily/prices/groups')\r\n      : '';\r\n    notic.notificationType == Defines.NOTIFICATION_TYPE.RATE_PALEN\r\n      ? this.router.navigateByUrl('/daily/rateplans/rateplans')\r\n      : '';\r\n    notic.notificationType == Defines.NOTIFICATION_TYPE.SERVICE_CLASS\r\n      ? this.router.navigateByUrl('/daily/services/classes')\r\n      : '';\r\n    notic.notificationType == Defines.NOTIFICATION_TYPE.TARRIF_MODEL\r\n      ? this.router.navigateByUrl('/daily/services/tariffs')\r\n      : '';\r\n    op.hide(event);\r\n  }\r\n  logout() {\r\n    this.authenticationService\r\n      .logout(this.userName)\r\n      .subscribe((response: any) => console.log('logout resp', response));\r\n    localStorage.clear();\r\n    this.userName = '';\r\n    this.router.navigateByUrl('/login');\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <app-sidebar [ngClass]=\"state === 'open' ? 'stateOpen' : ''\"></app-sidebar>\r\n  <div class=\"main-content\" [ngClass]=\"state === 'open' ? 'sidebarActive' : ''\">\r\n    <app-header></app-header>\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  <div *ngIf=\"loaderState | async as loading\">\r\n    <ngx-loading\r\n      [show]=\"loading\"\r\n      [config]=\"{\r\n        backdropBackgroundColour: 'rgba(255,255,255,0.60)',\r\n        backdropBorderRadius: '0.2rem',\r\n        fullScreenBackdrop: false,\r\n        primaryColour: '#e60000',\r\n        secondaryColour: '#e60000',\r\n        tertiaryColour: '#e60000'\r\n      }\"\r\n    ></ngx-loading>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '../authentication/guards/auth.guard';\r\nimport { PrivilegesGuard } from '../authentication/guards/privileges.guard';\r\nimport { PRIVILEGES } from '../shared/statics/privileges';\r\nimport { AccessDeniedComponent } from './layout/access-denied/access-denied.component';\r\nimport { MainLayoutComponent } from './layout/main-layout/main-layout.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: () =>\r\n      import('../authentication/authentication.module').then(\r\n        (mod) => mod.AuthenticationModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'daily',\r\n    component: MainLayoutComponent,\r\n    children: [\r\n      { path: 'accessDenied', component: AccessDeniedComponent },\r\n      {\r\n        path: 'users',\r\n        loadChildren: () =>\r\n          import('../users/users.module').then((mod) => mod.UsersModule),\r\n        canActivate: [PrivilegesGuard, AuthGuard],\r\n        data: { privilege: PRIVILEGES.USERS_MANAGMENT.GET_ALL },\r\n      },\r\n      {\r\n        path: 'profiles',\r\n        loadChildren: () =>\r\n          import('../profiles/profiles.module').then(\r\n            (mod) => mod.ProfilesModule\r\n          ),\r\n        canActivate: [PrivilegesGuard, AuthGuard],\r\n        data: { privilege: PRIVILEGES.PROFILES_MANAGMENT.GET_ALL },\r\n      },\r\n      {\r\n        path: 'services',\r\n        loadChildren: () =>\r\n          import('../services-tariffs/services-tariffs.module').then(\r\n            (mod) => mod.ServicesTariffsModule\r\n          ),\r\n        canActivate: [AuthGuard],\r\n      },\r\n      {\r\n        path: 'rateplans',\r\n        loadChildren: () =>\r\n          import('../rateplans/rateplans.module').then(\r\n            (mod) => mod.RateplansModule\r\n          ),\r\n        canActivate: [AuthGuard],\r\n      },\r\n      {\r\n        path: 'prices',\r\n        loadChildren: () =>\r\n          import('../prices/prices.module').then((mod) => mod.PricesModule),\r\n        canActivate: [AuthGuard],\r\n      },\r\n      {\r\n        path: 'validation',\r\n        loadChildren: () =>\r\n          import('../validation/validation.module').then(\r\n            (mod) => mod.ValidationModule\r\n          ),\r\n        canActivate: [PrivilegesGuard, AuthGuard],\r\n        data: { privilege: PRIVILEGES.VALIDATION.GET_ALL },\r\n      },\r\n      {\r\n        path: 'manual',\r\n        loadChildren: () =>\r\n          import('../manual-adjustment/manual-adjustment.module').then(\r\n            (mod) => mod.ManualAdjustmentModule\r\n          ),\r\n        canActivate: [PrivilegesGuard, AuthGuard],\r\n        data: { privilege: PRIVILEGES.MANUAL_ADJUSTMENT.GET_ALL },\r\n      },\r\n      {\r\n        path: 'transfer',\r\n        loadChildren: () =>\r\n          import('../transfer-adjustment/transfer-adjustment.module').then(\r\n            (mod) => mod.TransferAdjustmentModule\r\n          ),\r\n        canActivate: [PrivilegesGuard, AuthGuard],\r\n        data: { privilege: PRIVILEGES.TRANSFER_ADJUSTMENT.GET_ALL },\r\n      },\r\n      {\r\n        path: 'home',\r\n        loadChildren: () =>\r\n          import('../home-page/home-page.module').then(\r\n            (mod) => mod.HomePageModule\r\n          ),\r\n        canActivate: [AuthGuard],\r\n      },\r\n      {\r\n        path: 'footprint',\r\n        loadChildren: () =>\r\n          import('../footprint-logs/footprint-logs.module').then(\r\n            (mod) => mod.FootprintLogsModule\r\n          ),\r\n        canActivate: [PrivilegesGuard, AuthGuard],\r\n        data: { privilege: PRIVILEGES.LOGS.GET_ALL },\r\n      },\r\n      {\r\n        path: 'systemConfig',\r\n        loadChildren: () =>\r\n          import('../config-system/config-system.module').then(\r\n            (mod) => mod.ConfigSystemModule\r\n          ),\r\n        canActivate: [PrivilegesGuard, AuthGuard],\r\n        data: { privilege: PRIVILEGES.CONFIGRATION.GET_ALL },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CoreRoutingModule {}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nimport { Subscription } from 'rxjs';\r\nimport { LoaderService } from '../../services/loader-service/loader.service';\r\nimport { SidebarService } from '../../services/sidebar-service/sidebar.service';\r\n\r\n@Component({\r\n  selector: 'app-main-layout',\r\n  templateUrl: './main-layout.component.html',\r\n  styleUrls: ['./main-layout.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [MessageService],\r\n})\r\nexport class MainLayoutComponent implements OnInit, OnDestroy {\r\n  state: string = 'close';\r\n  sidebarSubscription!: Subscription;\r\n  loaderState = this.loaderService.loaderState$;\r\n  constructor(\r\n    private loaderService: LoaderService,\r\n    private sidebarService: SidebarService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.sidebarSubscription = this.sidebarService.stateSubject.subscribe(\r\n      (state) => {\r\n        this.state = state;\r\n      }\r\n    );\r\n  }\r\n  ngAfterViewInit() {\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.sidebarSubscription?.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { MessageService, PrimeNGConfig } from 'primeng/api';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ToastMessageService implements OnInit {\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private primengConfig: PrimeNGConfig\r\n  ) {}\r\n  ngOnInit(): void {\r\n    this.primengConfig.ripple = true;\r\n  }\r\n  showSuccess(summary: string, detail: string, sticky: boolean) {\r\n    this.messageService.add({\r\n      severity: 'success',\r\n      summary: summary,\r\n      detail: detail,\r\n      sticky: sticky,\r\n    });\r\n  }\r\n  showInfo(summary: string, detail: string, sticky: boolean) {\r\n    this.messageService.add({\r\n      severity: 'info',\r\n      summary: summary,\r\n      detail: detail,\r\n      sticky: sticky,\r\n    });\r\n  }\r\n  showWarn(summary: string, detail: string, sticky: boolean) {\r\n    this.messageService.add({\r\n      severity: 'warn',\r\n      summary: summary,\r\n      detail: detail,\r\n      sticky: sticky,\r\n    });\r\n  }\r\n\r\n  showError(summary: string, detail: string, sticky: boolean) {\r\n    this.messageService.add({\r\n      severity: 'error',\r\n      summary: summary,\r\n      detail: detail,\r\n      sticky: sticky,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHeaders,\r\n  HttpResponse,\r\n} from '@angular/common/http';\r\nimport { Observable, tap } from 'rxjs';\r\nimport { ToastMessageService } from '../services/toast-message-service/toast-message.service';\r\nimport { Router } from '@angular/router';\r\nimport { Defines } from 'src/app/shared/statics/defines';\r\nimport { Footprint } from 'src/app/shared/models/footprint';\r\nimport { ACTIONS } from 'src/app/shared/statics/actions';\r\nimport { FootprintService } from 'src/app/shared/services/footprint-service/footprint.service';\r\nimport { LoaderService } from '../services/loader-service/loader.service';\r\nimport { AuthenticationService } from 'src/app/authentication/services/authentication.service';\r\n\r\n@Injectable()\r\nexport class HttpRequestInterceptor implements HttpInterceptor {\r\n  headers = new HttpHeaders({\r\n    'Content-Type': 'application/json',\r\n    'Access-Control-Allow-Origin': '*',\r\n    'Access-Control-Allow-Methods': '*',\r\n    'Access-Control-Allow-Headers':\r\n      'Content-Type, Authorization, X-Requested-With',\r\n  });\r\n  requestBody: any;\r\n  responseBody: any;\r\n  constructor(\r\n    private toastMessageService: ToastMessageService,\r\n    private router: Router,\r\n    private footprintService: FootprintService,\r\n    private loaderService: LoaderService\r\n  ) {}\r\n\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    request.url?.includes('notifications')\r\n      ? this.loaderService.hide()\r\n      : this.loaderService.show();\r\n    let req = this.prework(request);\r\n    return next.handle(req).pipe(\r\n      tap((response) => {\r\n        if (response instanceof HttpResponse) {\r\n          this.loaderService.hide();\r\n          this.postwork(response);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  prework(request: HttpRequest<any>) {\r\n    this.requestBody = request;\r\n    if (request.url?.includes('login')) {\r\n      const req = request.clone({\r\n        headers: this.headers,\r\n        body: { ...request.body },\r\n      });\r\n      console.log('%c prework request', 'color: green', req);\r\n      return req;\r\n    } else {\r\n      let token = localStorage.getItem('token') as string;\r\n      let fullHeaders = this.headers.set('Authorization', 'Bearer ' + token);\r\n      const req = request.clone({\r\n        headers: fullHeaders,\r\n        body: { ...request.body },\r\n      });\r\n      console.log('%c prework request', 'color: green', req);\r\n      return req;\r\n    }\r\n  }\r\n\r\n  postwork(response: HttpResponse<any>) {\r\n    this.responseBody = response;\r\n\r\n    if (response.url?.includes('login')) {\r\n      if (response?.body?.payload) {\r\n        localStorage.setItem('token', response?.body?.payload['token']);\r\n        localStorage.setItem(\r\n          'activeUser',\r\n          response?.body?.payload['user'].username\r\n        );\r\n      }\r\n    }\r\n    console.log('%c postwork response', 'color: red', response);\r\n    this.handleError(response);\r\n    // this.handleFootPrintRequest();\r\n  }\r\n\r\n  public handleError(response: HttpResponse<any>) {\r\n    let crud = [Defines.CRUD.ADD, Defines.CRUD.DELETE, Defines.CRUD.UPDATE];\r\n    if (response.body.statusCode == Defines.RESPONSE_STATUS.NON_AUTH) {\r\n      localStorage.clear();\r\n      this.router.navigateByUrl('/');\r\n    }\r\n    Object.values(crud).map((crud) => {\r\n      if (response.url?.includes(crud)) {\r\n        if (\r\n          response.body.statusCode == Defines.RESPONSE_STATUS.SUCCESS &&\r\n          !response.url?.includes(Defines.FOOTPRINT.ADD_LOG)\r\n        ) {\r\n          this.toastMessageService.showSuccess(\r\n            'Success',\r\n            response.body.statusMessage,\r\n            false\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    if (\r\n      response.body.statusCode !== Defines.RESPONSE_STATUS.SUCCESS &&\r\n      !response.url?.includes(Defines.FOOTPRINT.ADD_LOG)\r\n    ) {\r\n      if (response.body.statusCode == Defines.RESPONSE_STATUS.NO_DATA) {\r\n        if (!this.footprintService.refreshFlag) {\r\n          this.toastMessageService.showWarn(\r\n            'No Data',\r\n            response.body.statusMessage\r\n              ? response.body.statusMessage\r\n              : response.body.message,\r\n            false\r\n          );\r\n        }\r\n        this.footprintService.refreshFlag = false;\r\n      } else {\r\n        this.toastMessageService.showError(\r\n          'Error',\r\n          response.body.statusMessage\r\n            ? response.body.statusMessage\r\n            : response.body.message,\r\n          false\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  // handleFootPrintRequest() {\r\n  //   let newValue: any;\r\n  //   let oldValue: any;\r\n  //   let allValues: any;\r\n  //   let objectIdentifier: any;\r\n  //   let checkAdd = this.requestBody.url?.includes(Defines.CRUD.ADD);\r\n  //   let checkUpdate = this.requestBody.url?.includes(Defines.CRUD.UPDATE);\r\n  //   let checkUpdateBatch = this.requestBody.url?.includes(\r\n  //     Defines.CRUD.UPDATE_BATCH\r\n  //   );\r\n  //   let checkDelete = this.requestBody.url?.includes(Defines.CRUD.DELETE);\r\n  //   let checkAddMutiple =\r\n  //     this.requestBody.url?.includes('validation-engine/update') ||\r\n  //     this.requestBody.url?.includes('manual-adjustment/update') ||\r\n  //     this.requestBody.url?.includes('transfer-adjustment/agg-data/add');\r\n  //   if (checkUpdateBatch) {\r\n  //     allValues = this.footprintService.filterOldValues();\r\n  //     this.footPrintMutipe(allValues, this.requestBody, this.responseBody);\r\n  //   } else if (checkUpdate && !checkAddMutiple) {\r\n  //     newValue = this.footprintService.newValue;\r\n  //     oldValue = this.footprintService.oldValue;\r\n  //     objectIdentifier = this.footprintService.objectIdentifier;\r\n  //     this.addFootprint(\r\n  //       oldValue,\r\n  //       newValue,\r\n  //       checkUpdate,\r\n  //       checkAdd,\r\n  //       objectIdentifier\r\n  //     );\r\n  //   } else if (\r\n  //     checkAdd &&\r\n  //     !this.requestBody.url?.includes('add-logs') &&\r\n  //     !checkAddMutiple\r\n  //   ) {\r\n  //     objectIdentifier = this.responseBody.body.payload.id; // get id from add request response\r\n  //     newValue = this.footprintService.newValue;\r\n  //     this.addFootprint(\r\n  //       oldValue,\r\n  //       newValue,\r\n  //       checkUpdate,\r\n  //       checkAdd,\r\n  //       objectIdentifier\r\n  //     );\r\n  //   } else if (checkDelete) {\r\n  //     objectIdentifier = this.footprintService.objectIdentifier;\r\n  //     this.addFootprint(\r\n  //       oldValue,\r\n  //       newValue,\r\n  //       checkUpdate,\r\n  //       checkAdd,\r\n  //       objectIdentifier\r\n  //     );\r\n  //   } else if (checkAddMutiple) {\r\n  //     allValues = this.footprintService.addMultipeNewVal();\r\n  //     this.footPrintMutipe(allValues, this.requestBody, this.responseBody);\r\n  //   } else {\r\n  //     this.addFootprint(oldValue, newValue, checkUpdate, checkAdd);\r\n  //   }\r\n  // }\r\n\r\n  // addFootprint(\r\n  //   oldValue: any,\r\n  //   newValue: any,\r\n  //   checkUpdate: boolean,\r\n  //   checkAdd: boolean,\r\n  //   objectIdentifier?: any\r\n  // ) {\r\n  //   let footprint: Footprint;\r\n  //   ACTIONS.ACTIONS_DETAILS.map((action) => {\r\n  //     if (this.requestBody.url === action.url) {\r\n  //       if (action.id === 1 ) { //login\r\n  //         delete this.requestBody.body[\"password\"];    \r\n  //       }\r\n  //       footprint = {\r\n  //         pageName: action.pageName,\r\n  //         requestId: this.responseBody.body.traceId, //traceId\r\n  //         objectIdentifier: objectIdentifier ? objectIdentifier : 'all',\r\n  //         actionId: action.id,\r\n  //         requestBody: JSON.stringify(this.requestBody),\r\n  //         responseBody: JSON.stringify(this.responseBody),\r\n  //         oldValue: checkUpdate ? oldValue : null,\r\n  //         newValue: checkUpdate || checkAdd ? newValue : null,\r\n  //       };\r\n  //       this.footprintService.footprintRequest(footprint).subscribe();\r\n  //       return;\r\n  //     }\r\n  //   });\r\n  // }\r\n  // footPrintMutipe(allValues: any[], reqBody: any, resBody: any) {\r\n  //   let footprint: Footprint;\r\n  //   let actionID: number;\r\n  //   let pageName: string;\r\n  //   ACTIONS.ACTIONS_DETAILS.map((action) => {\r\n  //     if (this.requestBody.url === action.url) {\r\n  //       actionID = action.id;\r\n  //       pageName = action.pageName;\r\n  //       return;\r\n  //     }\r\n  //   });\r\n  //   allValues = allValues.map((val: any) => {\r\n  //     footprint = {\r\n  //       pageName: pageName,\r\n  //       requestId: this.responseBody.body.traceId, //traceId\r\n  //       objectIdentifier: val.identifier,\r\n  //       actionId: actionID,\r\n  //       requestBody: JSON.stringify(reqBody),\r\n  //       responseBody: JSON.stringify(resBody),\r\n  //       oldValue: val.oldValues,\r\n  //       newValue: val.newValues,\r\n  //     };\r\n  //     this.footprintService.footprintRequest(footprint).subscribe();\r\n  //   });\r\n  // }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { CoreRoutingModule } from './core-routing.module';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { MainLayoutComponent } from './layout/main-layout/main-layout.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HttpRequestInterceptor } from './interceptors/http-request.interceptor';\r\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AccessDeniedComponent } from './layout/access-denied/access-denied.component';\r\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\r\n\r\nconst httpRequestInterceptor = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true },\r\n];\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent,\r\n    MainLayoutComponent,\r\n    SidebarComponent,\r\n    AccessDeniedComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CoreRoutingModule,\r\n    SharedModule,\r\n    BrowserAnimationsModule,\r\n    NgxLoadingModule.forRoot({\r\n      animationType: ngxLoadingAnimationTypes.doubleBounce,\r\n    }),\r\n  ],\r\n  providers: [httpRequestInterceptor],\r\n})\r\nexport class CoreModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CoreRoutingModule } from './core/core-routing.module';\r\nimport { CoreModule } from './core/core.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { UsersModule } from './users/users.module';\r\nimport { MessageService } from 'primeng/api';\r\nimport { ToastModule } from 'primeng/toast';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CoreModule,\r\n    CoreRoutingModule,\r\n    SharedModule,\r\n    ToastModule,\r\n \r\n  ],\r\n  providers: [MessageService],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}